%h2
  = @member.name

%p
  = image_tag(@member.gravatar_url, :width => '80', :height => '80')

%p
  = mail_to(@member.email)

%p
  Proposals made:
  = @member.proposals_count
  (Succeeded:
  = @member.succeeded_proposals_count
  Failed:
  = succeed ')' do
    = @member.failed_proposals_count

%p
  Proposals voted on:
  = @member.votes_count

- if current_user.has_permission(:membership_proposal)
  - if co.member_classes.count > 1
    .section
      %h3
        Change Member Class

      %p
        Create a proposal to change the member class of this member. Current class: 
        = @member.member_class.name

      = form_tag(change_class_member_path(@member)) do
        %p
          = label_tag(:description)
          = text_area_tag :description
        %p
          = label_tag(:class)
          = collection_select(:member, :member_class_id, 
            co.member_classes.all.reject {|mc| mc==@member.member_class }, :id, :name)
        %p
          = submit_tag "Create Proposal", :id => 'submit'
  - unless current_user == @member
    .section
      %h3
        Propose the ejection of this member

      = form_tag(member_path(@member), :method => :delete) do
        %p
          = label_tag(:description)
          = text_area_tag :description
        %p
          = submit_tag "Create proposal to eject this member", :id => 'submit'

.section
  %h3 Timeline for this member
  %table.timeline
    %tr
      %th Event
      %th Date
    - for event in @timeline
      %tr{:class => cycle('odd', 'even')}
        = render :partial => "one_click/#{event[:kind]}", :locals => {:event => event}
        %td.timestamp= event[:timestamp].to_s(:long)

